#!/usr/bin/env node
require('dotenv/config');
const { createShopDNS } = require('./cloudflare-service');
const Cloudflare = require('cloudflare');

const cloudflare = new Cloudflare({
  apiToken: process.env.CLOUDFLARE_API_TOKEN,
});

const ZONE_ID = process.env.CLOUDFLARE_ZONE_ID;
const SERVER_IP = '46.224.19.173';

async function createDNSRecord(name, type = 'A', content = SERVER_IP) {
  try {
    const record = await cloudflare.dns.records.create({
      zone_id: ZONE_ID,
      type: type,
      name: name,
      content: content,
      ttl: 1, // Auto
      proxied: true, // –ß–µ—Ä–µ–∑ Cloudflare proxy –¥–ª—è SSL
    });
    console.log(`‚úÖ DNS –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞: ${name} -> ${content}`);
    return { success: true, recordId: record.id };
  } catch (error) {
    if (error.message && error.message.includes('already exists')) {
      console.log(`‚ö†Ô∏è  DNS –∑–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${name}`);
      return { success: true, exists: true };
    }
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è DNS –∑–∞–ø–∏—Å–∏ ${name}:`, error.message);
    return { success: false, error: error.message };
  }
}

async function setupAllDNS() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ DNS –∑–∞–ø–∏—Å–µ–π...\n');

  const records = [
    // –ö–æ—Ä–Ω–µ–≤–æ–π –¥–æ–º–µ–Ω (–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    { name: 'x-bro.com', description: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (PROD)' },
    { name: '@', description: '–ö–æ—Ä–Ω–µ–≤–æ–π –¥–æ–º–µ–Ω (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å)' },

    // Production
    { name: 'admin', description: '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å (PROD)' },
    // seed.x-bro.com —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

    // Dev
    { name: 'dev', description: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (DEV)' },
    { name: 'dev-admin', description: '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å (DEV)' },
    // deva.x-bro.com —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  ];

  console.log('üìã –°–æ–∑–¥–∞—é —Å–ª–µ–¥—É—é—â–∏–µ DNS –∑–∞–ø–∏—Å–∏:\n');
  for (const record of records) {
    console.log(
      `   ‚Üí ${record.name === '@' ? 'x-bro.com' : record.name + '.x-bro.com'} - ${record.description}`
    );
  }
  console.log('');

  for (const record of records) {
    await createDNSRecord(record.name);
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 500));
  }

  console.log('\n‚ú® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\nüìù –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:');
  console.log('   PRODUCTION:');
  console.log('   - https://x-bro.com              (–≥–ª–∞–≤–Ω–∞—è + —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è)');
  console.log('   - https://admin.x-bro.com        (—Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω)');
  console.log('   - https://seed.x-bro.com         (–¥–µ–º–æ-–º–∞–≥–∞–∑–∏–Ω)');
  console.log('');
  console.log('   DEV:');
  console.log('   - https://dev.x-bro.com          (–≥–ª–∞–≤–Ω–∞—è + —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è DEV)');
  console.log('   - https://dev-admin.x-bro.com    (—Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω DEV)');
  console.log('   - https://deva.x-bro.com         (–¥–µ–º–æ-–º–∞–≥–∞–∑–∏–Ω DEV)');
  console.log('');
  console.log('‚è±Ô∏è  DNS –∑–∞–ø–∏—Å–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç—ã');
}

setupAllDNS().catch(console.error);
