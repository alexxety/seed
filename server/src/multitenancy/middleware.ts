const { PrismaClient } = require('@prisma/client');

/**
 * Middleware –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ search_path –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫ –ë–î
 *
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * await setSearchPath(req);
 * // –¢–µ–ø–µ—Ä—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∏–¥—É—Ç –≤ —Å—Ö–µ–º—É tenant
 * const products = await prisma.$queryRaw`SELECT * FROM products`;
 */
async function setSearchPath(req, prisma = null) {
  const client = prisma || new PrismaClient();

  // –ï—Å–ª–∏ –µ—Å—Ç—å tenant context - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º search_path
  if (req.context && req.context.tenant) {
    const schema = req.context.tenant.schema;

    console.log(`üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ search_path: ${schema}, public`);

    await client.$executeRawUnsafe(
      `SET search_path TO "${schema}", public`
    );

    return client;
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç tenant - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ public
  console.log(`üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ search_path: public (–±–µ–∑ tenant)`);
  await client.$executeRawUnsafe(`SET search_path TO public`);

  return client;
}

/**
 * Express middleware –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ search_path
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è tenant-scoped —Ä–æ—É—Ç–æ–≤
 */
function autoSetSearchPath(req, res, next) {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ req –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
  req.setSearchPath = async () => {
    return await setSearchPath(req);
  };

  next();
}

/**
 * –°–æ–∑–¥–∞—Ç—å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Prisma –∫–ª–∏–µ–Ω—Ç –¥–ª—è tenant
 */
async function createTenantPrismaClient(tenantSchema) {
  const prisma = new PrismaClient();

  await prisma.$executeRawUnsafe(
    `SET search_path TO "${tenantSchema}", public`
  );

  return prisma;
}

module.exports = {
  setSearchPath,
  autoSetSearchPath,
  createTenantPrismaClient
};
