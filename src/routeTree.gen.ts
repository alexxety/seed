/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/routes/__root';
import { Route as SuperadminRouteImport } from './app/routes/superadmin';
import { Route as RegisterRouteImport } from './app/routes/register';
import { Route as CheckoutRouteImport } from './app/routes/checkout';
import { Route as CartRouteImport } from './app/routes/cart';
import { Route as AdminRouteImport } from './app/routes/admin';
import { Route as IndexRouteImport } from './app/routes/index';
import { Route as SuperadminLoginRouteImport } from './app/routes/superadmin/login';
import { Route as SuperadminSuperadminRouteImport } from './app/routes/superadmin/_superadmin';
import { Route as SuccessOrderNumberRouteImport } from './app/routes/success.$orderNumber';
import { Route as ProductIdRouteImport } from './app/routes/product.$id';
import { Route as AdminLoginRouteImport } from './app/routes/admin/login';
import { Route as AdminAdminRouteImport } from './app/routes/admin/_admin';
import { Route as SuperadminSuperadminShopsRouteImport } from './app/routes/superadmin/_superadmin/shops';
import { Route as AdminAdminSettingsRouteImport } from './app/routes/admin/_admin/settings';
import { Route as AdminAdminProductsRouteImport } from './app/routes/admin/_admin/products';
import { Route as AdminAdminOrdersRouteImport } from './app/routes/admin/_admin/orders';
import { Route as AdminAdminCategoriesRouteImport } from './app/routes/admin/_admin/categories';

const SuperadminRoute = SuperadminRouteImport.update({
  id: '/superadmin',
  path: '/superadmin',
  getParentRoute: () => rootRouteImport,
} as any);
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any);
const CheckoutRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRouteImport,
} as any);
const CartRoute = CartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRouteImport,
} as any);
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);
const SuperadminLoginRoute = SuperadminLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => SuperadminRoute,
} as any);
const SuperadminSuperadminRoute = SuperadminSuperadminRouteImport.update({
  id: '/_superadmin',
  getParentRoute: () => SuperadminRoute,
} as any);
const SuccessOrderNumberRoute = SuccessOrderNumberRouteImport.update({
  id: '/success/$orderNumber',
  path: '/success/$orderNumber',
  getParentRoute: () => rootRouteImport,
} as any);
const ProductIdRoute = ProductIdRouteImport.update({
  id: '/product/$id',
  path: '/product/$id',
  getParentRoute: () => rootRouteImport,
} as any);
const AdminLoginRoute = AdminLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AdminRoute,
} as any);
const AdminAdminRoute = AdminAdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => AdminRoute,
} as any);
const SuperadminSuperadminShopsRoute = SuperadminSuperadminShopsRouteImport.update({
  id: '/shops',
  path: '/shops',
  getParentRoute: () => SuperadminSuperadminRoute,
} as any);
const AdminAdminSettingsRoute = AdminAdminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminAdminRoute,
} as any);
const AdminAdminProductsRoute = AdminAdminProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => AdminAdminRoute,
} as any);
const AdminAdminOrdersRoute = AdminAdminOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AdminAdminRoute,
} as any);
const AdminAdminCategoriesRoute = AdminAdminCategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AdminAdminRoute,
} as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/admin': typeof AdminAdminRouteWithChildren;
  '/cart': typeof CartRoute;
  '/checkout': typeof CheckoutRoute;
  '/register': typeof RegisterRoute;
  '/superadmin': typeof SuperadminSuperadminRouteWithChildren;
  '/admin/login': typeof AdminLoginRoute;
  '/product/$id': typeof ProductIdRoute;
  '/success/$orderNumber': typeof SuccessOrderNumberRoute;
  '/superadmin/login': typeof SuperadminLoginRoute;
  '/admin/categories': typeof AdminAdminCategoriesRoute;
  '/admin/orders': typeof AdminAdminOrdersRoute;
  '/admin/products': typeof AdminAdminProductsRoute;
  '/admin/settings': typeof AdminAdminSettingsRoute;
  '/superadmin/shops': typeof SuperadminSuperadminShopsRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/admin': typeof AdminAdminRouteWithChildren;
  '/cart': typeof CartRoute;
  '/checkout': typeof CheckoutRoute;
  '/register': typeof RegisterRoute;
  '/superadmin': typeof SuperadminSuperadminRouteWithChildren;
  '/admin/login': typeof AdminLoginRoute;
  '/product/$id': typeof ProductIdRoute;
  '/success/$orderNumber': typeof SuccessOrderNumberRoute;
  '/superadmin/login': typeof SuperadminLoginRoute;
  '/admin/categories': typeof AdminAdminCategoriesRoute;
  '/admin/orders': typeof AdminAdminOrdersRoute;
  '/admin/products': typeof AdminAdminProductsRoute;
  '/admin/settings': typeof AdminAdminSettingsRoute;
  '/superadmin/shops': typeof SuperadminSuperadminShopsRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/admin': typeof AdminRouteWithChildren;
  '/cart': typeof CartRoute;
  '/checkout': typeof CheckoutRoute;
  '/register': typeof RegisterRoute;
  '/superadmin': typeof SuperadminRouteWithChildren;
  '/admin/_admin': typeof AdminAdminRouteWithChildren;
  '/admin/login': typeof AdminLoginRoute;
  '/product/$id': typeof ProductIdRoute;
  '/success/$orderNumber': typeof SuccessOrderNumberRoute;
  '/superadmin/_superadmin': typeof SuperadminSuperadminRouteWithChildren;
  '/superadmin/login': typeof SuperadminLoginRoute;
  '/admin/_admin/categories': typeof AdminAdminCategoriesRoute;
  '/admin/_admin/orders': typeof AdminAdminOrdersRoute;
  '/admin/_admin/products': typeof AdminAdminProductsRoute;
  '/admin/_admin/settings': typeof AdminAdminSettingsRoute;
  '/superadmin/_superadmin/shops': typeof SuperadminSuperadminShopsRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/admin'
    | '/cart'
    | '/checkout'
    | '/register'
    | '/superadmin'
    | '/admin/login'
    | '/product/$id'
    | '/success/$orderNumber'
    | '/superadmin/login'
    | '/admin/categories'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/settings'
    | '/superadmin/shops';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/admin'
    | '/cart'
    | '/checkout'
    | '/register'
    | '/superadmin'
    | '/admin/login'
    | '/product/$id'
    | '/success/$orderNumber'
    | '/superadmin/login'
    | '/admin/categories'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/settings'
    | '/superadmin/shops';
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/cart'
    | '/checkout'
    | '/register'
    | '/superadmin'
    | '/admin/_admin'
    | '/admin/login'
    | '/product/$id'
    | '/success/$orderNumber'
    | '/superadmin/_superadmin'
    | '/superadmin/login'
    | '/admin/_admin/categories'
    | '/admin/_admin/orders'
    | '/admin/_admin/products'
    | '/admin/_admin/settings'
    | '/superadmin/_superadmin/shops';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AdminRoute: typeof AdminRouteWithChildren;
  CartRoute: typeof CartRoute;
  CheckoutRoute: typeof CheckoutRoute;
  RegisterRoute: typeof RegisterRoute;
  SuperadminRoute: typeof SuperadminRouteWithChildren;
  ProductIdRoute: typeof ProductIdRoute;
  SuccessOrderNumberRoute: typeof SuccessOrderNumberRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/superadmin': {
      id: '/superadmin';
      path: '/superadmin';
      fullPath: '/superadmin';
      preLoaderRoute: typeof SuperadminRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/register': {
      id: '/register';
      path: '/register';
      fullPath: '/register';
      preLoaderRoute: typeof RegisterRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/checkout': {
      id: '/checkout';
      path: '/checkout';
      fullPath: '/checkout';
      preLoaderRoute: typeof CheckoutRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/cart': {
      id: '/cart';
      path: '/cart';
      fullPath: '/cart';
      preLoaderRoute: typeof CartRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/admin': {
      id: '/admin';
      path: '/admin';
      fullPath: '/admin';
      preLoaderRoute: typeof AdminRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/superadmin/login': {
      id: '/superadmin/login';
      path: '/login';
      fullPath: '/superadmin/login';
      preLoaderRoute: typeof SuperadminLoginRouteImport;
      parentRoute: typeof SuperadminRoute;
    };
    '/superadmin/_superadmin': {
      id: '/superadmin/_superadmin';
      path: '';
      fullPath: '/superadmin';
      preLoaderRoute: typeof SuperadminSuperadminRouteImport;
      parentRoute: typeof SuperadminRoute;
    };
    '/success/$orderNumber': {
      id: '/success/$orderNumber';
      path: '/success/$orderNumber';
      fullPath: '/success/$orderNumber';
      preLoaderRoute: typeof SuccessOrderNumberRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/product/$id': {
      id: '/product/$id';
      path: '/product/$id';
      fullPath: '/product/$id';
      preLoaderRoute: typeof ProductIdRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/admin/login': {
      id: '/admin/login';
      path: '/login';
      fullPath: '/admin/login';
      preLoaderRoute: typeof AdminLoginRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/admin/_admin': {
      id: '/admin/_admin';
      path: '';
      fullPath: '/admin';
      preLoaderRoute: typeof AdminAdminRouteImport;
      parentRoute: typeof AdminRoute;
    };
    '/superadmin/_superadmin/shops': {
      id: '/superadmin/_superadmin/shops';
      path: '/shops';
      fullPath: '/superadmin/shops';
      preLoaderRoute: typeof SuperadminSuperadminShopsRouteImport;
      parentRoute: typeof SuperadminSuperadminRoute;
    };
    '/admin/_admin/settings': {
      id: '/admin/_admin/settings';
      path: '/settings';
      fullPath: '/admin/settings';
      preLoaderRoute: typeof AdminAdminSettingsRouteImport;
      parentRoute: typeof AdminAdminRoute;
    };
    '/admin/_admin/products': {
      id: '/admin/_admin/products';
      path: '/products';
      fullPath: '/admin/products';
      preLoaderRoute: typeof AdminAdminProductsRouteImport;
      parentRoute: typeof AdminAdminRoute;
    };
    '/admin/_admin/orders': {
      id: '/admin/_admin/orders';
      path: '/orders';
      fullPath: '/admin/orders';
      preLoaderRoute: typeof AdminAdminOrdersRouteImport;
      parentRoute: typeof AdminAdminRoute;
    };
    '/admin/_admin/categories': {
      id: '/admin/_admin/categories';
      path: '/categories';
      fullPath: '/admin/categories';
      preLoaderRoute: typeof AdminAdminCategoriesRouteImport;
      parentRoute: typeof AdminAdminRoute;
    };
  }
}

interface AdminAdminRouteChildren {
  AdminAdminCategoriesRoute: typeof AdminAdminCategoriesRoute;
  AdminAdminOrdersRoute: typeof AdminAdminOrdersRoute;
  AdminAdminProductsRoute: typeof AdminAdminProductsRoute;
  AdminAdminSettingsRoute: typeof AdminAdminSettingsRoute;
}

const AdminAdminRouteChildren: AdminAdminRouteChildren = {
  AdminAdminCategoriesRoute: AdminAdminCategoriesRoute,
  AdminAdminOrdersRoute: AdminAdminOrdersRoute,
  AdminAdminProductsRoute: AdminAdminProductsRoute,
  AdminAdminSettingsRoute: AdminAdminSettingsRoute,
};

const AdminAdminRouteWithChildren = AdminAdminRoute._addFileChildren(AdminAdminRouteChildren);

interface AdminRouteChildren {
  AdminAdminRoute: typeof AdminAdminRouteWithChildren;
  AdminLoginRoute: typeof AdminLoginRoute;
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminRoute: AdminAdminRouteWithChildren,
  AdminLoginRoute: AdminLoginRoute,
};

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren);

interface SuperadminSuperadminRouteChildren {
  SuperadminSuperadminShopsRoute: typeof SuperadminSuperadminShopsRoute;
}

const SuperadminSuperadminRouteChildren: SuperadminSuperadminRouteChildren = {
  SuperadminSuperadminShopsRoute: SuperadminSuperadminShopsRoute,
};

const SuperadminSuperadminRouteWithChildren = SuperadminSuperadminRoute._addFileChildren(
  SuperadminSuperadminRouteChildren
);

interface SuperadminRouteChildren {
  SuperadminSuperadminRoute: typeof SuperadminSuperadminRouteWithChildren;
  SuperadminLoginRoute: typeof SuperadminLoginRoute;
}

const SuperadminRouteChildren: SuperadminRouteChildren = {
  SuperadminSuperadminRoute: SuperadminSuperadminRouteWithChildren,
  SuperadminLoginRoute: SuperadminLoginRoute,
};

const SuperadminRouteWithChildren = SuperadminRoute._addFileChildren(SuperadminRouteChildren);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  CartRoute: CartRoute,
  CheckoutRoute: CheckoutRoute,
  RegisterRoute: RegisterRoute,
  SuperadminRoute: SuperadminRouteWithChildren,
  ProductIdRoute: ProductIdRoute,
  SuccessOrderNumberRoute: SuccessOrderNumberRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
